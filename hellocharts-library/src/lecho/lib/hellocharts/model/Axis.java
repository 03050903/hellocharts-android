package lecho.lib.hellocharts.model;

import java.util.ArrayList;
import java.util.List;

/**
 * Single axis model. By default axis is auto-generated. Use {@link #setAutoGenerated(boolean)} to disable axis values
 * generation and set values manually using {@link #setValues(List)}. If Axis is auto-generated {@link #setValues(List)}
 * will be ignored. Change how axis labels are displayed by changing formatter {@link #setFormatter(ValueFormatter)}.
 * Axis can have a name that should be displayed next to labels(that depends on renderer implementation), you can change
 * name using {@link #setName(String)}, by default axis name is empty and therefore not displayed.
 */
public class Axis {
	private List<AxisValue> values = new ArrayList<AxisValue>();
	private String name;
	private boolean isAutoGenerated = true;
	private ValueFormatter formatter = new NumberValueFormatter();

	/**
	 * Creates auto-generated axis without name and with default formatter.
	 * 
	 * @see NumberValueFormatter
	 */
	public Axis() {
	}

	/**
	 * Creates axis with given values(not auto-generated) without name and with default formatter.
	 */
	public Axis(List<AxisValue> values) {
		this.values = values;
		this.isAutoGenerated = false;
	}

	public List<AxisValue> getValues() {
		return values;
	}

	public Axis setValues(List<AxisValue> values) {
		this.values = values;
		return this;
	}

	public String getName() {
		return name;
	}

	public Axis setName(String name) {
		this.name = name;
		return this;
	}

	public boolean isAutoGenerated() {
		return isAutoGenerated;
	}

	public Axis setAutoGenerated(boolean isAutoGenerated) {
		this.isAutoGenerated = isAutoGenerated;
		return this;
	}

	public ValueFormatter getFormatter() {
		return formatter;
	}

	public Axis setFormatter(ValueFormatter formatter) {
		if (null == formatter) {
			this.formatter = new NumberValueFormatter();
		} else {
			this.formatter = formatter;
		}
		return this;
	}
}
